@model SchoolManagementApp.MVC.Models.ClassEnrollmentViewModel

@{
    ViewData["Title"] = "ManageEnrollments";
}

<h2>Manage Enrollments for @Model.Class.Time Session of @Model.Class.CourseName </h2>
<h3>Instructor: @Model.Class.LecturerName </h3>

<hr />
<h3>Student List</h3>
<table class="table">
    <thead>
        <tr>
            <th>
                First Name
            </th>
            <th>
                Last Name
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var student in Model.Students)
        {
            <tr>
                <td>
                    @student.FirstName
                </td>
                <td>
                    @student.LastName
                </td>
                <td>
                    @* Dynamic button *@
                    @* Multiple ways to do it, all of them do the same thing, one may be more readable, the other may be more intuitive *@

                    @* AI generated *@
                    @* @if(student.IsEnrolled)
                    {
                        <a asp-action="Unenroll" asp-controller="Classes" asp-route-studentId="@student.Id" asp-route-classId="@Model.Class.Id">Unenroll</a>
                    }
                    else
                    {
                        <a asp-action="Enroll" asp-controller="Classes" asp-route-studentId="@student.Id" asp-route-classId="@Model.Class.Id">Enroll</a>
                    } *@

                    @* Instructor-guided *@
                    @* @if(student.IsEnrolled)
                    {
                        <button data-studentId="@student.Id" data-shouldEneoll="false" class="btn btn-danger enrollmentBtn" type="button">Unenroll</button>
                    }
                    else
                    {
                        <button data-studentId="@student.Id" data-shouldEneoll="true" class="btn btn-success enrollmentBtn" type="button">Enroll</button>
                    } *@

                    @* C# only *@
                    @{
                        string btnText = student.IsEnrolled ? "Unenroll" : "Enroll";
                        string btnClass = student.IsEnrolled ? "btn-danger" : "btn-success";
                        bool shouldEnroll = !student.IsEnrolled;
                    }
                    <button data-studentId="@student.Id" data-shouldEnroll="@shouldEnroll" 
                    class="btn btn @btnClass enrollmentBtn" type="button">@btnText</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="form-group">
    <br>
    <a class="btn btn-dark" asp-action="Index">Back to List</a>
</div>

<form asp-action="EnrollStudent" id="classEnrollmentForm">
    <input type="hidden" name="ClassId" id="classId" value="@Model.Class.Id" />
    <input type="hidden" name="StudentId" id="studentId" />
    <input type="hidden" name="ShouldEnroll" id="shouldEnroll" />
</form>

@section Scripts {
    <script>
        $(function(){
            $('.table').DataTable();

            $('.enrollmentBtn').click(function(e){
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Confirm Enrollment"
                }).then((result) => {
                    if (result.isConfirmed) {
                        var btn = $(this);
                        var studentId = btn.attr("data-studentId");
                        var shouldEnroll = btn.attr("data-shouldEnroll");
                        $('#studentId').val(studentId);
                        $('#shouldEnroll').val(shouldEnroll);
                        $('#classEnrollmentForm').submit();
                    }
                })
            })
        })
    </script>
}